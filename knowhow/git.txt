
git clone https://github.com/hiraieject/MySettings.git
github の場合、ブラウザで表示したときの右上に緑色の [Clone or download] があるので、それを押すとURLが表示される

git init
git config --global user.name hiraieject
git config --global user.email hirai@eject.org


git .
git commit
git status

git remote add origin https://github.com/hiraieject/MySettings.git
git push -u origin master
↑ 最初だけ
git push
↑ ２回目以降

password username を省略する
~/.netrc
machine github.com
login username
password xxxxxxx

--------------



git init
 -> カレントフォルダをリポジトリにする

git init <folder>
 -> 指定フォルダをリポジトリにする

git clone <リポジトリのパス>
 -> リポジトリのクローンをカレントに作成

git config --global user.name <ユーザー名>
git config --global user.email <メールアドレス>
 -> ユーザー名とemailの初期設定

git config --global core.editor 'エディタのパス'
 -> コミット時に起動するエディタを変更する

git config --global http.proxy 'http://10.77.8.70:8080'
git config --global url."https://".insteadOf git://
 -> proxy の設定(global)

git config --list
 -> global設定の確認 (~/.gitconfig)

git config --unset <削除したい設定の名前>
 -> 設定の削除

git add <ファイルorフォルダ>
 -> ローカルリポジトリ(=./.git)にファイルを追加

git reset
 -> ローカルリポジトリを空にする

git reset <ファイル>
 -> ローカルリポジトリからファイルを削除

git commit
git commit -m <コミットコメント>
 -> ローカルリポジトリにコミットする

git status
 -> 作業ディレクトリおよびインデックスの状態を確認する

.gitignore
 無視するファイルを列挙する。ワイルドカード使用可、一行一エントリ

git log
git log <ファイルパス>
git log -n <表示件数>
git log --grep="<検索パターン>"
 -> コミットログを確認

git reflog
 -> コマンド履歴

git rm <ファイル>
 -> ファイルを削除して、インデックスからも削除する

-------------------------
ssh-keygen -t rsa -b 2048 -C "hirai@eject.org"


------
GitHub/リモートリポジトリ

GitHub でリポジトリを作成、URLを確定
https://github.com/<user name>/<repository name>.git

git remote add <nickname> https://github.com/<user name>/<repository name>.git
 -> 作成したリポジトリを nickname という名前でアクセス出来るようにする

git push -u <nickname> master
ex)
 git push -u origin master

参考
Gitの基本的な使い方メモ - Qiita
https://qiita.com/opengl-8080/items/451c5967cbbc262f4f0d

-----------------
会社/Fodora16で github にアクセス出来無い問題
 -> openssl の verup と curl が openssl を使うようになってないとだめ

- opssl compile
wget https://www.openssl.org/source/openssl-1.0.2-latest.tar.gz

./config
make
make test
sudo make install
-> /usr/local/ssl にインストールされる
cd /usr/bin
sudo mv openssl openssl.org
ln -s /usr/local/ssl/bin/openssl .

- curl compile
./configure --with-ssl=/usr/local/ssl --prefix /usr

- git compile
※ 一応 version up したけど、必要ないかも

https://github.com/git/git/releases

./configure --prefix=/usr

